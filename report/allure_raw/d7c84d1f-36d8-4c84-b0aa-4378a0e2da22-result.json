{"name": "test_detail", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "@staticmethod\n    @allure.story(\"我的-幸运大抽奖-detail(奖品列表)接口\")\n    def test_detail():\n        # 调用get_actId\n        actId = TestMine.test_get_actId\n        print('detail')\n        url = 'http://192.168.3.155/rest/user/miniprogram/lucky/detail?act=%s' % actId\n>       info = inter.get(url, hd)\n\ntestcase\\test_mine.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ninter_test\\interway.py:10: in get\n    result = r.json()\nvenv\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\n..\\..\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001E449316400>\ns = '<!doctype html><html lang=\"en\"><head><title>HTTP Status 400 – Bad Request</title><style type=\"text/css\">h1 {font-fami...uest message framing, or deceptive request routing).</p><hr class=\"line\" /><h3>Apache Tomcat/8.5.34</h3></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "stdout", "source": "3240dc27-acd8-499f-8783-f104c902c3a6-attachment.txt", "type": "text/plain"}], "start": 1597388089774, "stop": 1597388089785, "uuid": "d8022614-4f64-4233-8542-c6454ad1dc36", "historyId": "712d9b47b8661a83a653673bc23966b0", "testCaseId": "67351ec94ebc5d6574e4fa9486121564", "fullName": "testcase.test_mine.TestMine#test_detail", "labels": [{"name": "feature", "value": "测试mine接口"}, {"name": "story", "value": "我的-幸运大抽奖-detail(奖品列表)接口"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_mine"}, {"name": "subSuite", "value": "TestMine"}, {"name": "host", "value": "SC-201907251023"}, {"name": "thread", "value": "5588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_mine"}]}